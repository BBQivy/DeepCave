public class BinarySearchTree <Key extends Comparable<Key>,Value>{
	
	private Node root;
	
	public Value get(Key key) {
		Node x=root;
		while(x!=null) {
			int cmp=key.compareTo(x.key);
			if(cmp>0)x=x.rigth;
			else if(cmp<0)x=x.left;
			else return x.val;
		}
		return null;
	}
	
	public void put(Key key,Value val) {
		root=put(root,key,val);
	}
	
	private Node put(Node x,Key key,Value val) {
		if(x==null)return new Node(key,val);
		int cmp=key.compareTo(x.key);
		if(cmp<0)x.left=put(x.left, key, val);
		else if(cmp>0)x.rigth=put(x.rigth,key,val);
		else x.val=val;
		return x;
	}
	
	private class Node{
		private Key key;
		private Value val;
		private Node left,rigth;
		public Node(Key key,Value val) {
			this.key=key;
			this.val=val;
			
		}
	}
	
}
