public class UnorderedMaxPQ<Key extends Comparable<Key>> {
	private Key[]pq;
	private int N;
	
	public UnorderedMaxPQ(int capacity) {
		pq=(Key[])new Comparable[capacity];
	}
	public boolean isEmpty() {
		return N==0;
	}
	public void insert(Key x) {
		pq[N++]=x;
	}
    public Key delMax() {
    	int Max=0;
    	for(int i=1;i<N;i++) {
    		if(pq[Max].compareTo(pq[i])<0)Max=i;
    	}
    	swap(pq,Max,N-1);
    	return pq[--N];
    }
	public static void swap(Comparable[] nums, int i, int j) {
		Comparable aux = nums[i];
		nums[i] = nums[j];
		nums[j] = aux;
	}
}
